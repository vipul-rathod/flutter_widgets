// GENERATED CODE - DO NOT MODIFY BY HAND
// This code was generated by ObjectBox. To update it run the generator again:
// With a Flutter package, run `flutter pub run build_runner build`.
// With a Dart package, run `dart run build_runner build`.
// See also https://docs.objectbox.io/getting-started#generate-objectbox-code

// ignore_for_file: camel_case_types, depend_on_referenced_packages
// coverage:ignore-file

import 'dart:typed_data';

import 'package:flat_buffers/flat_buffers.dart' as fb;
import 'package:objectbox/internal.dart'
    as obx_int; // generated code can access "internal" functionality
import 'package:objectbox/objectbox.dart' as obx;
import 'package:objectbox_flutter_libs/objectbox_flutter_libs.dart';

import 'models/models.dart';

export 'package:objectbox/objectbox.dart'; // so that callers only have to import this file

final _entities = <obx_int.ModelEntity>[
  obx_int.ModelEntity(
      id: const obx_int.IdUid(1, 2878940563858819677),
      name: 'Employee',
      lastPropertyId: const obx_int.IdUid(15, 6518678885433381389),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 5607928143132901542),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 728324916954688329),
            name: 'name',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 7468341954263523635),
            name: 'date',
            type: 10,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 4651508468838974817),
            name: 'dob',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 1115128134210769497),
            name: 'phone',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 3357735113309076869),
            name: 'email',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 4875389857289629482),
            name: 'expLevel',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(8, 3282114408920545921),
            name: 'gender',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(9, 4731602544495995353),
            name: 'confirm',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(12, 4415057771198863474),
            name: 'profileImageName',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(13, 5143120882938608428),
            name: 'profileImagePath',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(14, 7906738771444176452),
            name: 'signatureImageName',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(15, 6518678885433381389),
            name: 'signatureImagePath',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[])
];

/// Shortcut for [Store.new] that passes [getObjectBoxModel] and for Flutter
/// apps by default a [directory] using `defaultStoreDirectory()` from the
/// ObjectBox Flutter library.
///
/// Note: for desktop apps it is recommended to specify a unique [directory].
///
/// See [Store.new] for an explanation of all parameters.
///
/// For Flutter apps, also calls `loadObjectBoxLibraryAndroidCompat()` from
/// the ObjectBox Flutter library to fix loading the native ObjectBox library
/// on Android 6 and older.
Future<obx.Store> openStore(
    {String? directory,
    int? maxDBSizeInKB,
    int? maxDataSizeInKB,
    int? fileMode,
    int? maxReaders,
    bool queriesCaseSensitiveDefault = true,
    String? macosApplicationGroup}) async {
  await loadObjectBoxLibraryAndroidCompat();
  return obx.Store(getObjectBoxModel(),
      directory: directory ?? (await defaultStoreDirectory()).path,
      maxDBSizeInKB: maxDBSizeInKB,
      maxDataSizeInKB: maxDataSizeInKB,
      fileMode: fileMode,
      maxReaders: maxReaders,
      queriesCaseSensitiveDefault: queriesCaseSensitiveDefault,
      macosApplicationGroup: macosApplicationGroup);
}

/// Returns the ObjectBox model definition for this project for use with
/// [Store.new].
obx_int.ModelDefinition getObjectBoxModel() {
  final model = obx_int.ModelInfo(
      entities: _entities,
      lastEntityId: const obx_int.IdUid(1, 2878940563858819677),
      lastIndexId: const obx_int.IdUid(0, 0),
      lastRelationId: const obx_int.IdUid(0, 0),
      lastSequenceId: const obx_int.IdUid(0, 0),
      retiredEntityUids: const [],
      retiredIndexUids: const [],
      retiredPropertyUids: const [3223018676784040793, 5069466478222444976],
      retiredRelationUids: const [],
      modelVersion: 5,
      modelVersionParserMinimum: 5,
      version: 1);

  final bindings = <Type, obx_int.EntityDefinition>{
    Employee: obx_int.EntityDefinition<Employee>(
        model: _entities[0],
        toOneRelations: (Employee object) => [],
        toManyRelations: (Employee object) => {},
        getId: (Employee object) => object.id,
        setId: (Employee object, int id) {
          object.id = id;
        },
        objectToFB: (Employee object, fb.Builder fbb) {
          final nameOffset =
              object.name == null ? null : fbb.writeString(object.name!);
          final dobOffset =
              object.dob == null ? null : fbb.writeString(object.dob!);
          final phoneOffset =
              object.phone == null ? null : fbb.writeString(object.phone!);
          final emailOffset =
              object.email == null ? null : fbb.writeString(object.email!);
          final expLevelOffset = object.expLevel == null
              ? null
              : fbb.writeString(object.expLevel!);
          final genderOffset =
              object.gender == null ? null : fbb.writeString(object.gender!);
          final profileImageNameOffset = object.profileImageName == null
              ? null
              : fbb.writeString(object.profileImageName!);
          final profileImagePathOffset = object.profileImagePath == null
              ? null
              : fbb.writeString(object.profileImagePath!);
          final signatureImageNameOffset = object.signatureImageName == null
              ? null
              : fbb.writeString(object.signatureImageName!);
          final signatureImagePathOffset = object.signatureImagePath == null
              ? null
              : fbb.writeString(object.signatureImagePath!);
          fbb.startTable(16);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, nameOffset);
          fbb.addInt64(2, object.date?.millisecondsSinceEpoch);
          fbb.addOffset(3, dobOffset);
          fbb.addOffset(4, phoneOffset);
          fbb.addOffset(5, emailOffset);
          fbb.addOffset(6, expLevelOffset);
          fbb.addOffset(7, genderOffset);
          fbb.addBool(8, object.confirm);
          fbb.addOffset(11, profileImageNameOffset);
          fbb.addOffset(12, profileImagePathOffset);
          fbb.addOffset(13, signatureImageNameOffset);
          fbb.addOffset(14, signatureImagePathOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final dateValue =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 8);
          final nameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 6);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final dobParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 10);
          final phoneParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 12);
          final emailParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 14);
          final expLevelParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 16);
          final genderParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 18);
          final confirmParam =
              const fb.BoolReader().vTableGetNullable(buffer, rootOffset, 20);
          final dateParam = dateValue == null
              ? null
              : DateTime.fromMillisecondsSinceEpoch(dateValue);
          final profileImageNameParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGetNullable(buffer, rootOffset, 26);
          final profileImagePathParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGetNullable(buffer, rootOffset, 28);
          final signatureImageNameParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGetNullable(buffer, rootOffset, 30);
          final signatureImagePathParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGetNullable(buffer, rootOffset, 32);
          final object = Employee(nameParam,
              id: idParam,
              dob: dobParam,
              phone: phoneParam,
              email: emailParam,
              expLevel: expLevelParam,
              gender: genderParam,
              confirm: confirmParam,
              date: dateParam,
              profileImageName: profileImageNameParam,
              profileImagePath: profileImagePathParam,
              signatureImageName: signatureImageNameParam,
              signatureImagePath: signatureImagePathParam);

          return object;
        })
  };

  return obx_int.ModelDefinition(model, bindings);
}

/// [Employee] entity fields to define ObjectBox queries.
class Employee_ {
  /// see [Employee.id]
  static final id =
      obx.QueryIntegerProperty<Employee>(_entities[0].properties[0]);

  /// see [Employee.name]
  static final name =
      obx.QueryStringProperty<Employee>(_entities[0].properties[1]);

  /// see [Employee.date]
  static final date =
      obx.QueryDateProperty<Employee>(_entities[0].properties[2]);

  /// see [Employee.dob]
  static final dob =
      obx.QueryStringProperty<Employee>(_entities[0].properties[3]);

  /// see [Employee.phone]
  static final phone =
      obx.QueryStringProperty<Employee>(_entities[0].properties[4]);

  /// see [Employee.email]
  static final email =
      obx.QueryStringProperty<Employee>(_entities[0].properties[5]);

  /// see [Employee.expLevel]
  static final expLevel =
      obx.QueryStringProperty<Employee>(_entities[0].properties[6]);

  /// see [Employee.gender]
  static final gender =
      obx.QueryStringProperty<Employee>(_entities[0].properties[7]);

  /// see [Employee.confirm]
  static final confirm =
      obx.QueryBooleanProperty<Employee>(_entities[0].properties[8]);

  /// see [Employee.profileImageName]
  static final profileImageName =
      obx.QueryStringProperty<Employee>(_entities[0].properties[9]);

  /// see [Employee.profileImagePath]
  static final profileImagePath =
      obx.QueryStringProperty<Employee>(_entities[0].properties[10]);

  /// see [Employee.signatureImageName]
  static final signatureImageName =
      obx.QueryStringProperty<Employee>(_entities[0].properties[11]);

  /// see [Employee.signatureImagePath]
  static final signatureImagePath =
      obx.QueryStringProperty<Employee>(_entities[0].properties[12]);
}
